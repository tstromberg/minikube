{
	"\"{{.minikube_addon}}\" was successfully disabled": "",
	"\"{{.name}}\" cluster does not exist. Proceeding ahead with cleanup.": "",
	"\"{{.name}}\" profile does not exist": "“{{.name}}”配置文件不存在",
	"\"{{.profile_name}}\" VM does not exist, nothing to stop": "",
	"\"{{.profile_name}}\" host does not exist, unable to show an IP": "",
	"\"{{.profile_name}}\" stopped.": "",
	"'none' driver does not support 'minikube docker-env' command": "",
	"'none' driver does not support 'minikube mount' command": "",
	"'none' driver does not support 'minikube ssh' command": "",
	"A VPN or firewall is interfering with HTTP access to the minikube VM. Alternatively, try a different VM driver: https://minikube.sigs.k8s.io/docs/start/": "",
	"A firewall is blocking Docker within the minikube VM from reaching the internet. You may need to configure it to use a proxy.": "",
	"A firewall is interfering with minikube's ability to make outgoing HTTPS requests. You may need to change the value of the HTTPS_PROXY environment variable.": "",
	"A firewall is likely blocking minikube from reaching the internet. You may need to configure minikube to use a proxy.": "",
	"A set of apiserver IP Addresses which are used in the generated certificate for kubernetes.  This can be used if you want to make the apiserver available from outside the machine": "",
	"A set of apiserver IP Addresses which are used in the generated certificate for kubernetes. This can be used if you want to make the apiserver available from outside the machine": "一组在为 kubernetes 生成的证书中使用的 apiserver IP 地址。如果您希望将此 apiserver 设置为可从机器外部访问，则可以使用这组 apiserver IP 地址",
	"A set of apiserver names which are used in the generated certificate for kubernetes.  This can be used if you want to make the apiserver available from outside the machine": "",
	"A set of apiserver names which are used in the generated certificate for kubernetes. This can be used if you want to make the apiserver available from outside the machine": "一组在为 kubernetes 生成的证书中使用的 apiserver 名称。如果您希望将此 apiserver 设置为可从机器外部访问，则可以使用这组 apiserver 名称",
	"A set of key=value pairs that describe configuration that may be passed to different components.\nThe key should be '.' separated, and the first part before the dot is the component to apply the configuration to.\nValid components are: kubelet, kubeadm, apiserver, controller-manager, etcd, proxy, scheduler\nValid kubeadm parameters:": "一组用于描述可传递给不同组件的配置的键值对。\n其中键应以英文句点“.”分隔，英文句点前面的第一个部分是应用该配置的组件。\n有效组件包括：kubelet、kubeadm、apiserver、controller-manager、etcd、proxy、scheduler\n有效 kubeadm 参数包括：",
	"A set of key=value pairs that describe feature gates for alpha/experimental features.": "一组用于描述 alpha 版功能/实验性功能的功能限制的键值对。",
	"Access the kubernetes dashboard running within the minikube cluster": "",
	"Add an image to local cache.": "",
	"Add machine IP to NO_PROXY environment variable": "",
	"Add or delete an image from the local cache.": "",
	"Additional help topics": "",
	"Additional mount options, such as cache=fscache": "",
	"Advanced Commands:": "",
	"Aliases": "",
	"Allow user prompts for more information": "",
	"Alternative image repository to pull docker images from. This can be used when you have limited access to gcr.io. Set it to \\\"auto\\\" to let minikube decide one for you. For Chinese mainland users, you may use local gcr.io mirrors such as registry.cn-hangzhou.aliyuncs.com/google_containers": "用于从中拉取 docker 映像的备选映像存储库。如果您对 gcr.io 的访问受到限制，则可以使用该映像存储库。将映像存储库设置为“auto”可让 minikube 为您选择一个存储库。对于中国大陆用户，您可以使用本地 gcr.io 镜像，例如 registry.cn-hangzhou.aliyuncs.com/google_containers",
	"Amount of RAM allocated to the minikube VM (format: \u003cnumber\u003e[\u003cunit\u003e], where unit = b, k, m or g)": "为 minikube 虚拟机分配的 RAM 容量（格式：\u003c数字\u003e[\u003c单位\u003e]，其中单位 = b、k、m 或 g）",
	"Amount of RAM allocated to the minikube VM (format: \u003cnumber\u003e[\u003cunit\u003e], where unit = b, k, m or g).": "",
	"Amount of time to wait for a service in seconds": "",
	"Amount of time to wait for service in seconds": "",
	"Available Commands": "",
	"Basic Commands:": "",
	"Cannot find directory {{.path}} for mount": "",
	"Check that minikube is running and that you have specified the correct namespace (-n flag) if required.": "",
	"Check that your --kubernetes-version has a leading 'v'. For example: 'v1.1.14'": "",
	"Check that your apiserver flags are valid, or run 'minikube delete'": "",
	"Check your firewall rules for interference, and run 'virt-host-validate' to check for KVM configuration issues. If you are running minikube within a VM, consider using --vm-driver=none": "",
	"Configuration and Management Commands:": "",
	"Configure an external network switch following the official documentation, then add `--hyperv-virtual-switch=\u003cswitch-name\u003e` to `minikube start`": "",
	"Configures the addon w/ADDON_NAME within minikube (example: minikube addons configure registry-creds). For a list of available addons use: minikube addons list": "",
	"Configuring environment for Kubernetes {{.k8sVersion}} on {{.runtime}} {{.runtimeVersion}}": "开始为Kubernetes {{.k8sVersion}}，{{.runtime}} {{.runtimeVersion}} 配置环境变量",
	"Configuring local host environment ...": "",
	"Confirm that you have a working internet connection and that your VM has not run out of resources by using: 'minikube logs'": "",
	"Confirm that you have supplied the correct value to --hyperv-virtual-switch using the 'Get-VMSwitch' command": "",
	"Country code of the image mirror to be used. Leave empty to use the global one. For Chinese mainland users, set it to cn.": "需要使用的映像镜像的国家/地区代码。留空以使用全球代码。对于中国大陆用户，请将其设置为 cn。",
	"Created a new profile : {{.profile_name}}": "",
	"Creating a new profile failed": "",
	"Creating mount {{.name}} ...": "正在创建装载 {{.name}}…",
	"Creating {{.driver_name}} VM (CPUs={{.number_of_cpus}}, Memory={{.memory_size}}MB, Disk={{.disk_size}}MB) ...": "",
	"Default group id used for the mount": "",
	"Default user id used for the mount": "",
	"Delete an image from the local cache.": "",
	"Deletes a local kubernetes cluster": "",
	"Deletes a local kubernetes cluster. This command deletes the VM, and removes all\nassociated files.": "",
	"Deletes a local kubernetes cluster. This command deletes the VM, and removes all associated files.": "删除本地 kubernetes 集群。此命令会删除虚拟机并移除所有关联的文件。",
	"Deleting \"{{.profile_name}}\" in {{.driver_name}} ...": "正在删除 {{.driver_name}} 中的“{{.profile_name}}”…",
	"Disable checking for the availability of hardware virtualization before the vm is started (virtualbox driver only)": "禁用在启动虚拟机之前检查硬件虚拟化的可用性（仅限 virtualbox 驱动程序）",
	"Disable dynamic memory in your VM manager, or pass in a larger --memory value": "",
	"Disables the addon w/ADDON_NAME within minikube (example: minikube addons disable dashboard). For a list of available addons use: minikube addons list": "",
	"Disables the filesystem mounts provided by the hypervisors": "停用由管理程序提供的文件系统装载",
	"Disk size allocated to the minikube VM (format: \u003cnumber\u003e[\u003cunit\u003e], where unit = b, k, m or g)": "分配给 minikube 虚拟机的磁盘大小（格式：\u003c数字\u003e[\u003c单位\u003e]，其中单位 = b、k、m 或 g）",
	"Disk size allocated to the minikube VM (format: \u003cnumber\u003e[\u003cunit\u003e], where unit = b, k, m or g).": "",
	"Display dashboard URL instead of opening a browser": "",
	"Display the kubernetes addons URL in the CLI instead of opening it in the default browser": "",
	"Display the kubernetes service URL in the CLI instead of opening it in the default browser": "",
	"Display values currently set in the minikube config file": "",
	"Display values currently set in the minikube config file.": "",
	"Docker inside the VM is unavailable. Try running 'minikube delete' to reset the VM.": "",
	"Docs have been saved at - {{.path}}": "",
	"Documentation: {{.url}}": "",
	"Done! kubectl is now configured to use \"{{.name}}\"": "",
	"Done! kubectl is now configured to use {{.name}}": "完成！kubectl已经配置至{{.name}}",
	"Download complete!": "下载完成！",
	"Downloading VM boot image ...": "",
	"Downloading driver {{.driver}}:": "",
	"Downloading {{.name}} {{.version}}": "",
	"ERROR creating `registry-creds-dpr` secret": "",
	"ERROR creating `registry-creds-ecr` secret: {{.error}}": "",
	"ERROR creating `registry-creds-gcr` secret: {{.error}}": "",
	"Either systemctl is not installed, or Docker is broken. Run 'sudo systemctl start docker' and 'journalctl -u docker'": "",
	"Enable experimental NVIDIA GPU support in minikube": "在 minikube 中启用实验性 NVIDIA GPU 支持",
	"Enable host resolver for NAT DNS requests (virtualbox driver only)": "为 NAT DNS 请求启用主机解析器（仅限 virtualbox 驱动程序）",
	"Enable proxy for NAT DNS requests (virtualbox driver only)": "为 NAT DNS 请求启用代理（仅限 virtualbox 驱动程序）",
	"Enable the default CNI plugin (/etc/cni/net.d/k8s.conf). Used in conjunction with \\\"--network-plugin=cni\\": "启用默认 CNI 插件 (/etc/cni/net.d/k8s.conf)。与“--network-plugin=cni”结合使用",
	"Enable the default CNI plugin (/etc/cni/net.d/k8s.conf). Used in conjunction with \\\"--network-plugin=cni\\\".": "",
	"Enables the addon w/ADDON_NAME within minikube (example: minikube addons enable dashboard). For a list of available addons use: minikube addons list": "",
	"Enabling dashboard ...": "",
	"Environment variables to pass to the Docker daemon. (format: key=value)": "传递给 Docker 守护进程的环境变量。（格式：键值对）",
	"Error checking driver version: {{.error}}": "检查驱动程序版本时出错：{{.error}}",
	"Error creating list template": "",
	"Error creating minikube directory": "",
	"Error creating status template": "",
	"Error creating view template": "",
	"Error executing list template": "",
	"Error executing status template": "",
	"Error executing template": "",
	"Error executing view template": "",
	"Error finding port for mount": "",
	"Error getting IP": "",
	"Error getting bootstrapper": "",
	"Error getting client": "",
	"Error getting client: {{.error}}": "",
	"Error getting cluster": "",
	"Error getting cluster bootstrapper": "",
	"Error getting config": "",
	"Error getting host": "",
	"Error getting host status": "",
	"Error getting machine logs": "",
	"Error getting machine status": "",
	"Error getting profiles to delete": "",
	"Error getting service status": "",
	"Error getting service with namespace: {{.namespace}} and labels {{.labelName}}:{{.addonName}}: {{.error}}": "",
	"Error getting the host IP address to use from within the VM": "",
	"Error host driver ip status": "",
	"Error killing mount process": "",
	"Error loading api": "",
	"Error loading profile config": "",
	"Error loading profile config: {{.error}}": "",
	"Error loading profile {{.name}}: {{.error}}": "加载配置文件 {{.name}} 时出错：{{.error}}",
	"Error opening service": "",
	"Error parsing minikube version: {{.error}}": "解析 minikube 版本时出错：{{.error}}",
	"Error parsing vmDriver version: {{.error}}": "解析 vmDriver 版本时出错：{{.error}}",
	"Error reading {{.path}}: {{.error}}": "",
	"Error restarting cluster": "",
	"Error setting shell variables": "",
	"Error starting cluster": "",
	"Error starting mount": "",
	"Error unsetting shell variables": "",
	"Error while setting kubectl current context :  {{.error}}": "",
	"Error writing mount pid": "",
	"Error: You have selected Kubernetes v{{.new}}, but the existing cluster for your profile is running Kubernetes v{{.old}}. Non-destructive downgrades are not supported, but you can proceed by performing one of the following options:\n\n* Recreate the cluster using Kubernetes v{{.new}}: Run \"minikube delete {{.profile}}\", then \"minikube start {{.profile}} --kubernetes-version={{.new}}\"\n* Create a second cluster with Kubernetes v{{.new}}: Run \"minikube start -p \u003cnew name\u003e --kubernetes-version={{.new}}\"\n* Reuse the existing cluster with Kubernetes v{{.old}} or newer: Run \"minikube start {{.profile}} --kubernetes-version={{.old}}\"": "",
	"Error: You have selected Kubernetes v{{.new}}, but the existing cluster for your profile is running Kubernetes v{{.old}}. Non-destructive downgrades are not supported, but you can proceed by performing one of the following options:\n* Recreate the cluster using Kubernetes v{{.new}}: Run \"minikube delete {{.profile}}\", then \"minikube start {{.profile}} --kubernetes-version={{.new}}\"\n* Create a second cluster with Kubernetes v{{.new}}: Run \"minikube start -p \u003cnew name\u003e --kubernetes-version={{.new}}\"\n* Reuse the existing cluster with Kubernetes v{{.old}} or newer: Run \"minikube start {{.profile}} --kubernetes-version={{.old}}": "错误：您已选择 Kubernetes v{{.new}}，但您的配置文件的现有集群正在运行 Kubernetes v{{.old}}。非破坏性降级不受支持，但若要继续操作，您可以执行以下选项之一：\n* 使用 Kubernetes v{{.new}} 重新创建现有集群：运行“minikube delete {{.profile}}”，然后运行“minikube start {{.profile}} --kubernetes-version={{.new}}”\n* 使用 Kubernetes v{{.new}} 再创建一个集群：运行“minikube start -p \u003cnew name\u003e --kubernetes-version={{.new}}”\n* 通过 Kubernetes v{{.old}} 或更高版本重复使用现有集群：运行“minikube start {{.profile}} --kubernetes-version={{.old}}”",
	"Error: [{{.id}}] {{.error}}": "",
	"Examples": "",
	"Exiting": "正在退出",
	"Exiting due to driver incompatibility": "",
	"Failed runtime": "",
	"Failed to cache ISO": "",
	"Failed to cache and load images": "",
	"Failed to cache binaries": "",
	"Failed to cache images": "",
	"Failed to change permissions for {{.minikube_dir_path}}: {{.error}}": "未能更改 {{.minikube_dir_path}} 的权限：{{.error}}",
	"Failed to check if machine exists": "",
	"Failed to check main repository and mirrors for images for images": "",
	"Failed to delete cluster: {{.error}}": "未能删除集群：{{.error}}",
	"Failed to delete cluster: {{.error}}__1": "未能删除集群：{{.error}}",
	"Failed to delete images": "",
	"Failed to delete images from config": "",
	"Failed to download kubectl": "",
	"Failed to enable container runtime": "",
	"Failed to generate config": "",
	"Failed to get bootstrapper": "",
	"Failed to get command runner": "",
	"Failed to get driver URL": "",
	"Failed to get image map": "",
	"Failed to get machine client": "",
	"Failed to get service URL: {{.error}}": "",
	"Failed to kill mount process: {{.error}}": "未能终止装载进程：{{.error}}",
	"Failed to list cached images": "",
	"Failed to remove profile": "",
	"Failed to save config": "",
	"Failed to set NO_PROXY Env. Please use `export NO_PROXY=$NO_PROXY,{{.ip}}": "未能设置 NO_PROXY 环境变量。请使用“export NO_PROXY=$NO_PROXY,{{.ip}}”",
	"Failed to set NO_PROXY Env. Please use `export NO_PROXY=$NO_PROXY,{{.ip}}`.": "",
	"Failed to setup certs": "",
	"Failed to setup kubeconfig": "",
	"Failed to update cluster": "",
	"Failed to update config": "",
	"Failed unmount: {{.error}}": "",
	"File permissions used for the mount": "",
	"Flags": "",
	"Follow": "",
	"For best results, install kubectl: https://kubernetes.io/docs/tasks/tools/install-kubectl/": "为获得最佳结果，请安装 kubectl：https://kubernetes.io/docs/tasks/tools/install-kubectl/",
	"For best results, install kubectl: https://kubernetes.io/docs/tasks/tools/install-kubectl/__1": "为获得最佳结果，请安装 kubectl：https://kubernetes.io/docs/tasks/tools/install-kubectl/",
	"For more information, see:": "如需了解详情，请参阅：",
	"Force environment to be configured for a specified shell: [fish, cmd, powershell, tcsh, bash, zsh], default is auto-detect": "",
	"Force minikube to perform possibly dangerous operations": "强制 minikube 执行可能有风险的操作",
	"Found network options:": "找到的网络选项：",
	"Found {{.number}} invalid profile(s) !": "",
	"Gets the kubernetes URL(s) for the specified service in your local cluster": "",
	"Gets the kubernetes URL(s) for the specified service in your local cluster. In the case of multiple URLs they will be printed one at a time.": "",
	"Gets the logs of the running instance, used for debugging minikube, not user code.": "",
	"Gets the status of a local kubernetes cluster": "",
	"Gets the status of a local kubernetes cluster.\n\tExit status contains the status of minikube's VM, cluster and kubernetes encoded on it's bits in this order from right to left.\n\tEg: 7 meaning: 1 (for minikube NOK) + 2 (for cluster NOK) + 4 (for kubernetes NOK)": "",
	"Gets the value of PROPERTY_NAME from the minikube config file": "",
	"Global Flags": "",
	"Go template format string for the addon list output.  The format for Go templates can be found here: https://golang.org/pkg/text/template/\nFor the list of accessible variables for the template, see the struct values here: https://godoc.org/k8s.io/minikube/cmd/minikube/cmd/config#AddonListTemplate": "",
	"Go template format string for the cache list output.  The format for Go templates can be found here: https://golang.org/pkg/text/template/\nFor the list of accessible variables for the template, see the struct values here: https://godoc.org/k8s.io/minikube/cmd/minikube/cmd#CacheListTemplate": "",
	"Go template format string for the config view output.  The format for Go templates can be found here: https://golang.org/pkg/text/template/\nFor the list of accessible variables for the template, see the struct values here: https://godoc.org/k8s.io/minikube/cmd/minikube/cmd/config#ConfigViewTemplate": "",
	"Go template format string for the status output.  The format for Go templates can be found here: https://golang.org/pkg/text/template/\nFor the list accessible variables for the template, see the struct values here: https://godoc.org/k8s.io/minikube/cmd/minikube/cmd#Status": "",
	"Group ID:     {{.groupID}}": "",
	"Have you set up libvirt correctly?": "",
	"Hide the hypervisor signature from the guest in minikube (kvm2 driver only)": "向 minikube 中的访客隐藏管理程序签名（仅限 kvm2 驱动程序）",
	"If the above advice does not help, please let us know:": "",
	"If true, cache docker images for the current bootstrapper and load them into the machine. Always false with --vm-driver=none.": "如果为 true，请缓存当前引导程序的 docker 映像并将其加载到机器中。在 --vm-driver=none 情况下始终为 false。",
	"If true, only download and cache files for later use - don't install or start anything.": "如果为 true，仅会下载和缓存文件以备后用 - 不会安装或启动任何项。",
	"If using the none driver, ensure that systemctl is installed": "",
	"If you are running minikube within a VM, consider using --vm-driver=none:": "",
	"Images Commands:": "",
	"Insecure Docker registries to pass to the Docker daemon.  The default service CIDR range will automatically be added.": "",
	"Insecure Docker registries to pass to the Docker daemon. The default service CIDR range will automatically be added.": "传递给 Docker 守护进程的不安全 Docker 注册表。系统会自动添加默认服务 CIDR 范围。",
	"Install VirtualBox, or select an alternative value for --vm-driver": "",
	"Install the latest hyperkit binary, and run 'minikube delete'": "",
	"Invalid size passed in argument: {{.error}}": "",
	"IsEnabled failed": "",
	"Kill the mount process spawned by minikube start": "",
	"Kubernetes {{.version}} is not supported by this release of minikube": "",
	"Launching Kubernetes ...": "",
	"Launching Kubernetes ... ": "正在启动 Kubernetes ... ",
	"Launching proxy ...": "",
	"List all available images from the local cache.": "",
	"List of guest VSock ports that should be exposed as sockets on the host (hyperkit driver only)": "应在主机上公开为套接字的访客 VSock 端口列表（仅限 hyperkit 驱动程序）",
	"Lists all available minikube addons as well as their current statuses (enabled/disabled)": "",
	"Lists all minikube profiles.": "",
	"Lists all valid minikube profiles and detects all possible invalid profiles.": "",
	"Lists the URLs for the services in your local cluster": "",
	"Local folders to share with Guest via NFS mounts (hyperkit driver only)": "通过 NFS 装载与访客共享的本地文件夹（仅限 hyperkit 驱动程序）",
	"Location of the VPNKit socket used for networking. If empty, disables Hyperkit VPNKitSock, if 'auto' uses Docker for Mac VPNKit connection, otherwise uses the specified VSock (hyperkit driver only)": "用于网络连接的 VPNKit 套接字的位置。如果为空，则停用 Hyperkit VPNKitSock；如果为“auto”，则将 Docker 用于 Mac VPNKit 连接；否则使用指定的 VSock（仅限 hyperkit 驱动程序）",
	"Location of the minikube iso": "minikube iso 的位置",
	"Location of the minikube iso.": "",
	"Log into or run a command on a machine with SSH; similar to 'docker-machine ssh'": "",
	"Log into or run a command on a machine with SSH; similar to 'docker-machine ssh'.": "",
	"Message Size: {{.size}}": "",
	"Minikube is a CLI tool that provisions and manages single-node Kubernetes clusters optimized for development workflows.": "",
	"Minikube is a tool for managing local Kubernetes clusters.": "",
	"Modify minikube config": "",
	"Modify minikube's kubernetes addons": "",
	"Mount type:   {{.name}}": "",
	"Mounting host path {{.sourcePath}} into VM as {{.destinationPath}} ...": "",
	"Mounts the specified directory into minikube": "",
	"Mounts the specified directory into minikube.": "",
	"NOTE: This process must stay alive for the mount to be accessible ...": "",
	"Networking and Connectivity Commands:": "",
	"No minikube profile was found. You can create one using `minikube start`.": "",
	"None of the known repositories in your location are accessible. Using {{.image_repository_name}} as fallback.": "您所在位置的已知存储库都无法访问。正在将 {{.image_repository_name}} 用作后备存储库。",
	"None of the known repositories is accessible. Consider specifying an alternative image repository with --image-repository flag": "已知存储库都无法访问。请考虑使用 --image-repository 标志指定备选映像存储库",
	"Not passing {{.name}}={{.value}} to docker env.": "",
	"Number of CPUs allocated to the minikube VM": "分配给 minikube 虚拟机的 CPU 的数量",
	"Number of CPUs allocated to the minikube VM.": "",
	"Number of lines back to go within the log": "",
	"OS release is {{.pretty_name}}": "",
	"Open the addons URL with https instead of http": "",
	"Open the service URL with https instead of http": "",
	"Opening kubernetes service  {{.namespace_name}}/{{.service_name}} in default browser...": "",
	"Opening {{.url}} in your default browser...": "",
	"Opens the addon w/ADDON_NAME within minikube (example: minikube addons open dashboard). For a list of available addons use: minikube addons list": "",
	"Options:      {{.options}}": "",
	"Outputs minikube shell completion for the given shell (bash or zsh)": "",
	"Outputs minikube shell completion for the given shell (bash or zsh)\n\n\tThis depends on the bash-completion binary.  Example installation instructions:\n\tOS X:\n\t\t$ brew install bash-completion\n\t\t$ source $(brew --prefix)/etc/bash_completion\n\t\t$ minikube completion bash \u003e ~/.minikube-completion  # for bash users\n\t\t$ minikube completion zsh \u003e ~/.minikube-completion  # for zsh users\n\t\t$ source ~/.minikube-completion\n\tUbuntu:\n\t\t$ apt-get install bash-completion\n\t\t$ source /etc/bash-completion\n\t\t$ source \u003c(minikube completion bash) # for bash users\n\t\t$ source \u003c(minikube completion zsh) # for zsh users\n\n\tAdditionally, you may want to output the completion to a file and source in your .bashrc\n\n\tNote for zsh users: [1] zsh completions are only supported in versions of zsh \u003e= 5.2": "",
	"Permissions:  {{.octalMode}} ({{.writtenMode}})": "",
	"Please enter a value:": "",
	"Please install the minikube hyperkit VM driver, or select an alternative --vm-driver": "",
	"Please install the minikube kvm2 VM driver, or select an alternative --vm-driver": "",
	"Please make sure the service you are looking for is deployed or is in the correct namespace.": "",
	"Please specify the directory to be mounted: \n\tminikube mount \u003csource directory\u003e:\u003ctarget directory\u003e   (example: \"/host-home:/vm-home\")": "",
	"Please upgrade the '{{.driver_executable}}'. {{.documentation_url}}": "请升级“{{.driver_executable}}”。{{.documentation_url}}",
	"Populates the specified folder with documentation in markdown about minikube": "",
	"Powering off \"{{.profile_name}}\" via SSH ...": "正在通过 SSH 关闭“{{.profile_name}}”…",
	"Preparing Kubernetes {{.k8sVersion}} on {{.runtime}} {{.runtimeVersion}} ...": "正在 {{.runtime}} {{.runtimeVersion}} 中准备 Kubernetes {{.k8sVersion}}…",
	"Print current and latest version number": "",
	"Print the version of minikube": "",
	"Print the version of minikube.": "",
	"Problems detected in {{.entry}}:": "",
	"Problems detected in {{.name}}:": "",
	"Profile gets or sets the current minikube profile": "",
	"Provide VM UUID to restore MAC address (hyperkit driver only)": "提供虚拟机 UUID 以恢复 MAC 地址（仅限 hyperkit 驱动程序）",
	"Pulling images ...": "拉取镜像 ...",
	"Reboot to complete VirtualBox installation, and verify that VirtualBox is not blocked by your system": "",
	"Rebuild libvirt with virt-network support": "",
	"Received {{.name}} signal": "",
	"Registry mirrors to pass to the Docker daemon": "传递给 Docker 守护进程的注册表镜像",
	"Reinstall VirtualBox and reboot. Alternatively, try the kvm2 driver: https://minikube.sigs.k8s.io/docs/reference/drivers/kvm2/": "",
	"Reinstall VirtualBox and verify that it is not blocked: System Preferences -\u003e Security \u0026 Privacy -\u003e General -\u003e Some system software was blocked from loading": "",
	"Related issues:": "",
	"Relaunching Kubernetes using {{.bootstrapper}} ...": "正在使用 {{.bootstrapper}} 重新启动 Kubernetes…",
	"Removing {{.directory}} ...": "正在移除 {{.directory}}…",
	"Requested CPU count {{.requested_cpus}} is less than the minimum allowed of {{.minimum_cpus}}": "",
	"Requested disk size {{.requested_size}} is less than minimum of {{.minimum_size}}": "请求的磁盘大小 {{.requested_size}} 小于 {{.minimum_size}} 的最小值",
	"Requested memory allocation ({{.memory}}MB) is less than the default memory allocation of {{.default_memorysize}}MB. Beware that minikube might not work correctly or crash unexpectedly.": "请求的内存分配 ({{.memory}}MB) 小于默认内存分配 {{.default_memorysize}}MB。请注意 minikube 可能无法正常运行或可能会意外崩溃。",
	"Requested memory allocation {{.requested_size}} is less than the minimum allowed of {{.minimum_size}}": "请求的内存分配 {{.requested_size}} 小于允许的 {{.minimum_size}} 最小值",
	"Retriable failure: {{.error}}": "",
	"Retrieve the ssh identity key path of the specified cluster": "",
	"Retrieve the ssh identity key path of the specified cluster.": "",
	"Retrieves the IP address of the running cluster": "",
	"Retrieves the IP address of the running cluster, and writes it to STDOUT.": "",
	"Retrieves the IP address of the running cluster, checks it\n\t\t\twith IP in kubeconfig, and corrects kubeconfig if incorrect.": "",
	"Returns the value of PROPERTY_NAME from the minikube config file.  Can be overwritten at runtime by flags or environmental variables.": "",
	"Run 'kubectl describe pod coredns -n kube-system' and check for a firewall or DNS conflict": "",
	"Run 'minikube delete' to delete the stale VM": "",
	"Run kubectl": "",
	"Run minikube from the C: drive.": "",
	"Run the kubernetes client, download it if necessary.\nExamples:\nminikube kubectl -- --help\nkubectl get pods --namespace kube-system": "",
	"Run the minikube command as an Administrator": "",
	"Running on localhost (CPUs={{.number_of_cpus}}, Memory={{.memory_size}}MB, Disk={{.disk_size}}MB) ...": "",
	"Set failed": "",
	"Sets an individual value in a minikube config file": "",
	"Sets the PROPERTY_NAME config value to PROPERTY_VALUE\n\tThese values can be overwritten by flags or environment variables at runtime.": "",
	"Sets up docker env variables; similar to '$(docker-machine env)'": "",
	"Sets up docker env variables; similar to '$(docker-machine env)'.": "",
	"Setting profile failed": "",
	"Show only log entries which point to known problems": "",
	"Show only the most recent journal entries, and continuously print new entries as they are appended to the journal.": "",
	"Skipped switching kubectl context for {{.profile_name}} because --keep-context was set.": "",
	"Sorry that minikube crashed. If this was unexpected, we would love to hear from you:": "",
	"Sorry, Kubernetes {{.version}} is not supported by this release of minikube": "",
	"Sorry, completion support is not yet implemented for {{.name}}": "",
	"Sorry, the kubeadm.{{.parameter_name}} parameter is currently not supported by --extra-config": "抱歉，--extra-config 目前不支持 kubeadm.{{.parameter_name}} 参数",
	"Sorry, the url provided with the --registry-mirror flag is invalid: {{.url}}": "抱歉，通过 --registry-mirror 标志提供的网址无效：{{.url}}",
	"Specified Kubernetes version {{.specified}} is less than the oldest supported version: {{.oldest}}": "",
	"Specify --kubernetes-version in v\u003cmajor\u003e.\u003cminor.\u003cbuild\u003e form. example: 'v1.1.14'": "",
	"Specify an alternate --host-only-cidr value, such as 172.16.0.1/24": "",
	"Specify arbitrary flags to pass to the Docker daemon. (format: key=value)": "指定要传递给 Docker 守护进程的任意标志。（格式：key=value）",
	"Specify the 9p version that the mount should use": "",
	"Specify the ip that the mount should be setup on": "",
	"Specify the mount filesystem type (supported types: 9p)": "",
	"Starting existing {{.driver_name}} VM for \"{{.profile_name}}\" ...": "",
	"Starts a local kubernetes cluster": "启动本地 kubernetes 集群",
	"Stopping \"{{.profile_name}}\" in {{.driver_name}} ...": "",
	"Stops a local kubernetes cluster running in Virtualbox. This command stops the VM\nitself, leaving all files intact. The cluster can be started again with the \"start\" command.": "",
	"Stops a running local kubernetes cluster": "",
	"Successfully mounted {{.sourcePath}} to {{.destinationPath}}": "",
	"Suggestion: {{.advice}}": "",
	"Target directory {{.path}} must be an absolute path": "",
	"The \"{{.driver_name}}\" driver requires root privileges. Please run minikube using 'sudo minikube --vm-driver={{.driver_name}}": "“{{.driver_name}}”驱动程序需要根权限。请使用“sudo minikube --vm-driver={{.driver_name}}”运行 minikube",
	"The \"{{.driver_name}}\" driver requires root privileges. Please run minikube using 'sudo minikube --vm-driver={{.driver_name}}'.": "",
	"The \"{{.driver_name}}\" driver should not be used with root privileges.": "",
	"The \"{{.name}}\" cluster has been deleted.": "“{{.name}}”集群已删除。",
	"The \"{{.name}}\" cluster has been deleted.__1": "“{{.name}}”集群已删除。",
	"The 'none' driver does not support multiple profiles: https://minikube.sigs.k8s.io/docs/reference/drivers/none/": "",
	"The 'none' driver provides limited isolation and may reduce system security and reliability.": "“none”驱动程序提供有限的隔离功能，并且可能会降低系统安全性和可靠性。",
	"The '{{.driver}}' driver requires elevated permissions. The following commands will be executed:\\n\\n{{ .example }}\\n": "",
	"The CIDR to be used for service cluster IPs.": "需要用于服务集群 IP 的 CIDR。",
	"The CIDR to be used for the minikube VM (virtualbox driver only)": "需要用于 minikube 虚拟机的 CIDR（仅限 virtualbox 驱动程序）",
	"The KVM QEMU connection URI. (kvm2 driver only)": "KVM QEMU 连接 URI。（仅限 kvm2 驱动程序）",
	"The KVM driver is unable to resurrect this old VM. Please run `minikube delete` to delete it and try again.": "",
	"The KVM network name. (kvm2 driver only)": "KVM 网络名称。（仅限 kvm2 驱动程序）",
	"The VM driver crashed. Run 'minikube start --alsologtostderr -v=8' to see the VM driver error message": "",
	"The VM driver exited with an error, and may be corrupt. Run 'minikube start' with --alsologtostderr -v=8 to see the error": "",
	"The VM that minikube is configured for no longer exists. Run 'minikube delete'": "",
	"The apiserver listening port": "apiserver 侦听端口",
	"The apiserver name which is used in the generated certificate for kubernetes.  This can be used if you want to make the apiserver available from outside the machine": "",
	"The apiserver name which is used in the generated certificate for kubernetes. This can be used if you want to make the apiserver available from outside the machine": "在为 kubernetes 生成的证书中使用的 apiserver 名称。如果您希望将此 apiserver 设置为可从机器外部访问，则可以使用这组 apiserver 名称",
	"The argument to pass the minikube mount command on start": "用于在启动时传递 minikube 装载命令的参数",
	"The argument to pass the minikube mount command on start.": "",
	"The cluster dns domain name used in the kubernetes cluster": "kubernetes 集群中使用的集群 dns 域名",
	"The container runtime to be used (docker, crio, containerd)": "需要使用的容器运行时（docker、crio、containerd）",
	"The container runtime to be used (docker, crio, containerd).": "",
	"The cri socket path to be used": "需要使用的 cri 套接字路径",
	"The cri socket path to be used.": "",
	"The docker host is currently not running": "",
	"The docker service is currently not active": "",
	"The driver '{{.driver}}' is not supported on {{.os}}": "{{.os}} 不支持驱动程序“{{.driver}}”",
	"The existing \"{{.profile_name}}\" VM that was created using the \"{{.old_driver}}\" driver, and is incompatible with the \"{{.driver}}\" driver.": "",
	"The hyperv virtual switch name. Defaults to first found. (hyperv driver only)": "hyperv 虚拟交换机名称。默认为找到的第一个 hyperv 虚拟交换机。（仅限 hyperv 驱动程序）",
	"The initial time interval for each check that wait performs in seconds": "",
	"The kubernetes version that the minikube VM will use (ex: v1.2.3)": "minikube 虚拟机将使用的 kubernetes 版本（例如 v1.2.3）",
	"The minikube VM is offline. Please run 'minikube start' to start it again.": "",
	"The name of the network plugin": "网络插件的名称",
	"The name of the network plugin.": "",
	"The number of bytes to use for 9p packet payload": "",
	"The path on the file system where the docs in markdown need to be saved": "",
	"The service namespace": "",
	"The services namespace": "",
	"The time interval for each check that wait performs in seconds": "",
	"The value passed to --format is invalid": "",
	"The value passed to --format is invalid: {{.error}}": "",
	"The vmwarefusion driver is deprecated and support for it will be removed in a future release.\n\t\t\tPlease consider switching to the new vmware unified driver, which is intended to replace the vmwarefusion driver.\n\t\t\tSee https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ for more information.\n\t\t\tTo disable this message, run [minikube config set ShowDriverDeprecationNotification false]": "",
	"The {{.driver_name}} driver should not be used with root privileges.": "不应以根权限使用 {{.driver_name}} 驱动程序。",
	"There appears to be another hypervisor conflicting with KVM. Please stop the other hypervisor, or use --vm-driver to switch to it.": "",
	"There's a new version for '{{.driver_executable}}'. Please consider upgrading. {{.documentation_url}}": "“{{.driver_executable}}”有一个新版本。请考虑升级。{{.documentation_url}}",
	"These changes will take effect upon a minikube delete and then a minikube start": "",
	"This addon does not have an endpoint defined for the 'addons open' command.\nYou can add one by annotating a service with the label {{.labelName}}:{{.addonName}}": "",
	"This can also be done automatically by setting the env var CHANGE_MINIKUBE_NONE_USER=true": "此操作还可通过设置环境变量 CHANGE_MINIKUBE_NONE_USER=true 自动完成",
	"This will keep the existing kubectl context and will create a minikube context.": "这将保留现有 kubectl 上下文并创建 minikube 上下文。",
	"This will start the mount daemon and automatically mount files into minikube": "这将启动装载守护进程并将文件自动装载到 minikube 中",
	"This will start the mount daemon and automatically mount files into minikube.": "",
	"Tip: To remove this root owned cluster, run: sudo {{.cmd}} delete": "提示：要移除这个由根用户拥有的集群，请运行 sudo {{.cmd}} delete",
	"Tip: Use 'minikube start -p \u003cname\u003e' to create a new cluster, or 'minikube delete' to delete this one.": "",
	"To connect to this cluster, use: kubectl --context={{.name}}": "如需连接到此集群，请使用 kubectl --context={{.name}}",
	"To connect to this cluster, use: kubectl --context={{.name}}__1": "如需连接到此集群，请使用 kubectl --context={{.name}}",
	"To connect to this cluster, use: kubectl --context={{.profile_name}}": "",
	"To disable this notice, run: 'minikube config set WantUpdateNotification false'\\n": "",
	"To proceed, either:\n      1) Delete the existing VM using: '{{.command}} delete'\n      or\n      2) Restart with the existing driver: '{{.command}} start --vm-driver={{.old_driver}}'": "",
	"To start minikube with HyperV Powershell must be in your PATH`": "",
	"To use kubectl or minikube commands as your own user, you may need to relocate them. For example, to overwrite your own settings, run:": "如需以您自己的用户身份使用 kubectl 或 minikube 命令，您可能需要重新定位该命令。例如，如需覆盖您的自定义设置，请运行：",
	"Troubleshooting Commands:": "",
	"Unable to bind flags": "",
	"Unable to enable dashboard": "",
	"Unable to fetch latest version info": "",
	"Unable to generate docs": "",
	"Unable to generate the documentation. Please ensure that the path specified is a directory, exists \u0026 you have permission to write to it.": "",
	"Unable to get VM IP address": "",
	"Unable to get bootstrapper: {{.error}}": "无法获取引导程序：{{.error}}",
	"Unable to get current user": "",
	"Unable to get runtime": "",
	"Unable to get the status of the cluster.": "",
	"Unable to kill mount process: {{.error}}": "",
	"Unable to load cached images from config file.": "无法从配置文件中加载缓存的映像。",
	"Unable to load cached images: {{.error}}": "",
	"Unable to load config: {{.error}}": "无法加载配置：{{.error}}",
	"Unable to parse \"{{.kubernetes_version}}\": {{.error}}": "无法解析“{{.kubernetes_version}}”：{{.error}}",
	"Unable to parse oldest Kubernetes version from constants: {{.error}}": "",
	"Unable to pull images, which may be OK: {{.error}}": "无法拉取映像，有可能是正常状况：{{.error}}",
	"Unable to remove machine directory: %v": "",
	"Unable to start VM": "",
	"Unable to stop VM": "",
	"Unable to update {{.driver}} driver: {{.error}}": "",
	"Uninstalling Kubernetes {{.kubernetes_version}} using {{.bootstrapper_name}} ...": "正在使用 {{.bootstrapper_name}} 卸载 Kubernetes {{.kubernetes_version}}…",
	"Unmounting {{.path}} ...": "",
	"Unset the KUBECONFIG environment variable, or verify that it does not point to an empty or otherwise invalid path": "",
	"Unset variables instead of setting them": "",
	"Update server returned an empty list": "",
	"Upgrade to QEMU v3.1.0+, run 'virt-host-validate', or ensure that you are not running in a nested VM environment.": "",
	"Upgrading from Kubernetes {{.old}} to {{.new}}": "正在从 Kubernetes {{.old}} 升级到 {{.new}}",
	"Usage": "",
	"Usage: minikube completion SHELL": "",
	"Usage: minikube delete": "",
	"Use \"{{.CommandPath}} [command] --help\" for more information about a command.": "",
	"Use VirtualBox to remove the conflicting VM and/or network interfaces": "",
	"Use native Golang SSH client (default true). Set to 'false' to use the command line 'ssh' command when accessing the docker machine. Useful for the machine drivers when they will not start with 'Waiting for SSH'.": "",
	"User ID:      {{.userID}}": "",
	"Userspace file server is shutdown": "",
	"Userspace file server:": "",
	"Using image repository {{.name}}": "正在使用映像存储库 {{.name}}",
	"Using the running {{.driver_name}} \"{{.profile_name}}\" VM ...": "",
	"VM driver is one of: %v": "虚拟机驱动程序是以下项之一：%v",
	"Verify that your HTTP_PROXY and HTTPS_PROXY environment variables are set correctly.": "",
	"Verify the IP address of the running cluster in kubeconfig.": "",
	"Verifying dashboard health ...": "",
	"Verifying proxy health ...": "",
	"Verifying:": "正在验证:",
	"Version:      {{.version}}": "",
	"VirtualBox and Hyper-V are having a conflict. Use '--vm-driver=hyperv' or disable Hyper-V using: 'bcdedit /set hypervisorlaunchtype off'": "",
	"VirtualBox cannot create a network, probably because it conflicts with an existing network that minikube no longer knows about. Try running 'minikube delete'": "",
	"VirtualBox is broken. Disable real-time anti-virus software, reboot, and reinstall VirtualBox if the problem continues.": "",
	"VirtualBox is broken. Reinstall VirtualBox, reboot, and run 'minikube delete'.": "",
	"Wait failed": "",
	"Wait failed: {{.error}}": "",
	"Wait until Kubernetes core services are healthy before exiting": "等到 Kubernetes 核心服务正常运行再退出",
	"Wait until Kubernetes core services are healthy before exiting.": "",
	"Waiting for the host to be provisioned ...": "",
	"Waiting for:": "",
	"Where to root the NFS Shares, defaults to /nfsshares (hyperkit driver only)": "NFS 共享的根目录位置，默认为 /nfsshares（仅限 hyperkit 驱动程序）",
	"You appear to be using a proxy, but your NO_PROXY environment does not include the minikube IP ({{.ip_address}}). Please see {{.documentation_url}} for more details": "您似乎正在使用代理，但您的 NO_PROXY 环境不包含 minikube IP ({{.ip_address}})。如需了解详情，请参阅 {{.documentation_url}}",
	"You can delete them using the following command(s):": "",
	"You may need to manually remove the \"{{.name}}\" VM from your hypervisor": "您可能需要从管理程序中手动移除“{{.name}}”虚拟机",
	"You must specify a service name": "",
	"Your host does not support KVM virtualization. Ensure that qemu-kvm is installed, and run 'virt-host-validate' to debug the problem": "",
	"Your host does not support virtualization. If you are running minikube within a VM, try '--vm-driver=none'. Otherwise, enable virtualization in your BIOS": "",
	"Your host is failing to route packets to the minikube VM. If you have VPN software, try turning it off or configuring it so that it does not re-route traffic to the VM IP. If not, check your VM environment routing options.": "",
	"Your minikube config refers to an unsupported driver. Erase ~/.minikube, and try again.": "",
	"Your minikube vm is not running, try minikube start.": "",
	"addon '{{.name}}' is currently not enabled.\nTo enable this addon run:\nminikube addons enable {{.name}}": "",
	"addon '{{.name}}' is not a valid addon packaged with minikube.\nTo see the list of available addons run:\nminikube addons list": "",
	"addon list failed": "",
	"addons modifies minikube addons files using subcommands like \"minikube addons enable heapster\"": "",
	"api load": "",
	"bash completion failed": "",
	"browser failed to open url: {{.error}}": "",
	"call with cleanup=true to remove old tunnels": "",
	"command runner": "",
	"config modifies minikube config files using subcommands like \"minikube config set vm-driver kvm\"\nConfigurable fields:\\n\\n": "",
	"config view failed": "",
	"dashboard service is not running: {{.error}}": "",
	"disable failed": "",
	"enable failed": "",
	"error creating clientset": "",
	"error creating machine client": "",
	"error getting driver": "",
	"error parsing the input ip address for mount": "",
	"error starting tunnel": "",
	"failed to open browser: {{.error}}": "",
	"if true, will embed the certs in kubeconfig.": "",
	"kubectl and minikube configuration will be stored in {{.home_folder}}": "kubectl 和 minikube 配置将存储在 {{.home_folder}} 中",
	"kubectl not found in PATH, but is required for the dashboard. Installation guide: https://kubernetes.io/docs/tasks/tools/install-kubectl/": "",
	"kubectl proxy": "",
	"logdir set failed": "",
	"max time to wait per Kubernetes core services to be healthy.": "",
	"minikube is not running, so the service cannot be accessed": "",
	"minikube is unable to access the Google Container Registry. You may need to configure it to use a HTTP proxy.": "",
	"minikube profile was successfully set to {{.profile_name}}": "",
	"minikube {{.version}} is available! Download it: {{.url}}": "",
	"mount argument \"{{.value}}\" must be in form: \u003csource directory\u003e:\u003ctarget directory\u003e": "",
	"mount failed": "",
	"not enough arguments ({{.ArgCount}}).\\nusage: minikube config set PROPERTY_NAME PROPERTY_VALUE": "",
	"profile sets the current minikube profile, or gets the current profile if no arguments are provided.  This is used to run and manage multiple minikube instance.  You can return to the default minikube profile by running `minikube profile default`": "",
	"service {{.namespace_name}}/{{.service_name}} has no node port": "",
	"stat failed": "",
	"toom any arguments ({{.ArgCount}}).\\nusage: minikube config set PROPERTY_NAME PROPERTY_VALUE": "",
	"tunnel creates a route to services deployed with type LoadBalancer and sets their Ingress to their ClusterIP": "",
	"tunnel makes services of type LoadBalancer accessible on localhost": "",
	"unable to bind flags": "",
	"unable to set logtostderr": "",
	"unset failed": "",
	"unset minikube profile": "",
	"unsets PROPERTY_NAME from the minikube config file.  Can be overwritten by flags or environmental variables": "",
	"unsets an individual value in a minikube config file": "",
	"unsupported driver: {{.name}}": "",
	"update config": "",
	"usage: minikube addons configure ADDON_NAME": "",
	"usage: minikube addons disable ADDON_NAME": "",
	"usage: minikube addons enable ADDON_NAME": "",
	"usage: minikube addons list": "",
	"usage: minikube addons open ADDON_NAME": "",
	"usage: minikube config unset PROPERTY_NAME": "",
	"usage: minikube delete": "",
	"usage: minikube delete --all": "",
	"usage: minikube profile [MINIKUBE_PROFILE_NAME]": "",
	"zsh completion failed": "",
	"{{.addonName}} was successfully enabled": "",
	"{{.extra_option_component_name}}.{{.key}}={{.value}}": "",
	"{{.machine}} IP has been updated to point at {{.ip}}": "",
	"{{.machine}} IP was already correctly configured for {{.ip}}": "",
	"{{.name}} cluster does not exist": "",
	"{{.name}} has no available configuration options": "",
	"{{.name}} was successfully configured": "",
	"{{.prefix}}minikube {{.version}} on {{.platform}}": "{{.platform}} 上的 {{.prefix}}minikube {{.version}}",
	"{{.type}} is not yet a supported filesystem. We will try anyways!": "",
	"{{.url}} is not accessible: {{.error}}": ""
}
